<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- <http pattern="/login" security="none"/> -->
	<http auto-config="true">

		<intercept-url pattern="/worklist/**" access="hasRole('ROLE_ASSESSOR')" />
		<intercept-url pattern="/approvals/**" access="hasAnyRole('ROLE_PROF, ROLE_CHIEF')" />

		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/reports/**" access="hasAnyRole('ROLE_ASSESSOR, ROLE_PROF, ROLE_CHIEF, ROLE_ADMIN')" />
		<intercept-url pattern="/" access="hasAnyRole('ROLE_ASSESSOR, ROLE_PROF, ROLE_CHIEF')" />
		<!-- access denied page -->
		<access-denied-handler error-page="/noaccess" />

		<form-login
		    login-page="/login"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout" />
	</http>


	<authentication-manager>
		<authentication-provider ref="authenticationProvider"></authentication-provider>
		<!-- <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  " />
	  </authentication-provider> -->
	</authentication-manager>

</beans:beans>